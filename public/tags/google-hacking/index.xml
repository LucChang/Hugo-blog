<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Google-Hacking on LucChang Blog</title>
        <link>http://localhost:1313/tags/google-hacking/</link>
        <description>Recent content in Google-Hacking on LucChang Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 28 May 2024 15:04:05 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/google-hacking/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>google-hacking 是什麼?</title>
        <link>http://localhost:1313/post/google-hacking/google-hacking/</link>
        <pubDate>Tue, 28 May 2024 15:04:05 +0000</pubDate>
        
        <guid>http://localhost:1313/post/google-hacking/google-hacking/</guid>
        <description>&lt;h2 id=&#34;google-hacking深入探究網路世界的暗黑搜尋技巧&#34;&gt;Google Hacking：深入探究網路世界的「暗黑」搜尋技巧
&lt;/h2&gt;&lt;p&gt;在浩瀚的網路世界中，Google 不僅僅是我們日常搜尋資料的工具，對於某些人來說，它更像一把能揭開網路世界隱藏層面的萬能鑰匙。這就是我們今天要探討的主題——Google Hacking，又稱為 Google Dorking。這項技術聽起來或許帶點神秘甚至危險的色彩，但它本質上是一種進階的搜尋技巧，利用 Google 強大的搜尋語法，發掘出一般搜尋難以觸及的資訊。&lt;/p&gt;
&lt;p&gt;本文將帶您深入了解什麼是 Google Hacking、它的用途、基本使用方式，並探討其可能帶來的攻擊與漏洞，最後提供有效的防禦方法。&lt;/p&gt;
&lt;h3 id=&#34;什麼是-google-hacking&#34;&gt;什麼是 Google Hacking？
&lt;/h3&gt;&lt;p&gt;Google Hacking 並非傳統意義上的「駭客攻擊」，它不涉及入侵或破壞任何系統。相反地，它是一種「被動式」的資訊收集技術，利用 Google 搜尋引擎內建的進階搜尋運算子（Advanced Operators），來精準地過濾搜尋結果，從而找到伺服器上因設定不當或人為疏忽而暴露在外的敏感資訊。&lt;/p&gt;
&lt;p&gt;這些資訊可能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;網站的後台登入頁面&lt;/li&gt;
&lt;li&gt;含有帳號密碼的設定檔案&lt;/li&gt;
&lt;li&gt;內部的機密文件或報告&lt;/li&gt;
&lt;li&gt;存在已知漏洞的網站版本資訊&lt;/li&gt;
&lt;li&gt;網路攝影機的公開畫面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以說，Google Hacking 的核心在於「挖掘」而非「攻擊」。它讓原本隱藏在網頁深處的資訊，因為符合特定的搜尋語法而被 Google 的爬蟲索引，最終呈現在搜尋結果中。&lt;/p&gt;
&lt;h3 id=&#34;google-hacking-的用途&#34;&gt;Google Hacking 的用途
&lt;/h3&gt;&lt;p&gt;Google Hacking 的用途廣泛，橫跨了善與惡的兩端：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;資安專業人員與滲透測試員：&lt;/strong&gt; 他們利用 Google Hacking 來評估自身或客戶網站的安全性。在攻擊者發現漏洞之前，先一步找出潛在的資安風險，並加以修補。這是一種合法且重要的網路安全實踐。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;網路犯罪者與駭客：&lt;/strong&gt; 不幸的是，惡意行為者也會利用這項技術來尋找攻擊目標。他們可以輕易地找到存在已知漏洞的網站，進而發動攻擊、竊取資料或植入惡意軟體。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;研究人員與記者：&lt;/strong&gt; 他們可以透過 Google Hacking 挖掘公開的數據、報告或未被廣泛注意到的資訊，作為研究或報導的素材。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一般使用者：&lt;/strong&gt; 學習基本的 Google Hacking 技巧，也能提升個人的搜尋效率，更快速、精準地找到所需的特定類型檔案或資訊。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基本的-google-hacking-使用方式&#34;&gt;基本的 Google Hacking 使用方式
&lt;/h3&gt;&lt;p&gt;Google Hacking 的精髓在於活用各種搜尋語法。以下介紹幾個最基本且強大的運算子：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;運算子&lt;/th&gt;
          &lt;th&gt;功能&lt;/th&gt;
          &lt;th&gt;範例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;site:&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;將搜尋範圍限定在特定網站或網域。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;site:example.com&lt;/code&gt; 只會搜尋來自 example.com 的結果。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;inurl:&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;搜尋網址中包含特定關鍵字的頁面。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;inurl:login&lt;/code&gt; 可以找到網址中含有 &amp;ldquo;login&amp;rdquo; 的頁面，通常是登入頁面。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;intitle:&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;搜尋網頁標題中包含特定關鍵字的頁面。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;intitle:&amp;quot;index of&amp;quot;&lt;/code&gt; 常用來尋找因設定不當而開放目錄瀏覽的網站。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;filetype:&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;搜尋特定檔案類型的文件。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;個資外洩 filetype:pdf&lt;/code&gt; 可以找到與個資外洩相關的 PDF 文件。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;intext:&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;搜尋網頁內容中包含特定關鍵字的頁面。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;intext:&amp;quot;username&amp;quot; intext:&amp;quot;password&amp;quot;&lt;/code&gt; 可能會找到包含帳號密碼資訊的頁面。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;精確匹配引號內的字詞。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;Google Hacking&amp;quot;&lt;/code&gt; 會搜尋完整包含 &amp;ldquo;Google Hacking&amp;rdquo; 這個詞組的頁面。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;排除包含特定關鍵字的結果。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;apple -fruit&lt;/code&gt; 會搜尋與蘋果公司相關的資訊，並排除水果的結果。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;這些運算子可以組合使用，產生更強大的搜尋效果。例如，&lt;code&gt;site:gov.tw filetype:xls 身份證&lt;/code&gt; 這個組合指令，就有可能找到政府網站上意外洩露的包含身分證號碼的 Excel 檔案。&lt;/p&gt;
&lt;h3 id=&#34;google-hacking-攻擊與常見漏洞&#34;&gt;Google Hacking 攻擊與常見漏洞
&lt;/h3&gt;&lt;p&gt;惡意攻擊者常利用 Google Hacking 來尋找以下幾種常見的網站漏洞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;目錄遍歷 (Directory Traversal):&lt;/strong&gt; 網站伺服器設定不當，導致整個網站的目錄結構被公開。攻擊者可以使用 &lt;code&gt;intitle:&amp;quot;index of&amp;quot;&lt;/code&gt; 等語法，輕易地瀏覽網站的所有檔案，並可能找到設定檔、原始碼等敏感資訊。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;敏感檔案洩露:&lt;/strong&gt; 開發者或管理者不慎將含有敏感資訊的檔案，如設定檔 (&lt;code&gt;.conf&lt;/code&gt;, &lt;code&gt;.ini&lt;/code&gt;)、資料庫備份檔 (&lt;code&gt;.sql&lt;/code&gt;, &lt;code&gt;.mdb&lt;/code&gt;)、密碼檔 (&lt;code&gt;.passwd&lt;/code&gt;) 或日誌檔 (&lt;code&gt;.log&lt;/code&gt;) 放置在網站的公開目錄下。攻擊者可透過 &lt;code&gt;filetype:&lt;/code&gt; 運算子輕易找到這些檔案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;後台登入頁面暴露:&lt;/strong&gt; 許多網站的後台登入頁面使用常見的名稱，如 &lt;code&gt;admin&lt;/code&gt;, &lt;code&gt;login&lt;/code&gt;, &lt;code&gt;manager&lt;/code&gt;。攻擊者可利用 &lt;code&gt;inurl:admin&lt;/code&gt; 或 &lt;code&gt;intitle:後台管理&lt;/code&gt; 等語法，快速找到這些登入入口，並嘗試進行暴力破解或猜測密碼。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;錯誤訊息洩露:&lt;/strong&gt; 當網站程式發生錯誤時，若伺服器設定不當，會將詳細的錯誤訊息直接顯示在網頁上。這些訊息可能包含資料庫的結構、伺服器路徑等敏感資訊，為攻擊者提供下一步攻擊的線索。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公開的網路設備:&lt;/strong&gt; 許多網路設備，如網路攝影機、印表機、路由器等，其管理介面若未經適當保護，也可能被 Google 索引。透過 &lt;code&gt;inurl:&amp;quot;view/index.shtml&amp;quot;&lt;/code&gt; 或 &lt;code&gt;intitle:&amp;quot;Live View / - AXIS&amp;quot;&lt;/code&gt; 等特定語法，就有可能直接看到即時影像或存取設備的管理介面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;防禦方法&#34;&gt;防禦方法
&lt;/h3&gt;&lt;p&gt;面對 Google Hacking 的潛在威脅，網站管理者與開發者應採取積極的防禦措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 &lt;code&gt;robots.txt&lt;/code&gt; 檔案:&lt;/strong&gt; 在網站根目錄下放置 &lt;code&gt;robots.txt&lt;/code&gt; 檔案，可以告知 Google 等搜尋引擎哪些目錄或檔案不應該被索引。這是最基本也是最重要的防禦手段。例如，可以加入以下指令來禁止所有爬蟲索引後台目錄：
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;User-agent: *
Disallow: /admin/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;適當的伺服器設定:&lt;/strong&gt; 關閉伺服器的目錄瀏覽功能。確保使用者無法在沒有索引檔案 (如 &lt;code&gt;index.html&lt;/code&gt;) 的情況下，直接看到整個目錄的檔案列表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;移除不必要的檔案:&lt;/strong&gt; 定期檢查網站伺服器，移除任何不必要的設定檔、備份檔、測試檔案或含有敏感資訊的文件。切勿將機密資料存放在網站的公開目錄下。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自訂錯誤頁面:&lt;/strong&gt; 設定自訂的錯誤頁面 (如 404 Not Found, 500 Internal Server Error)，避免向使用者顯示詳細的系統錯誤訊息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定期進行自我檢測:&lt;/strong&gt; 主動利用 Google Hacking 的技巧來檢測自己的網站。模擬攻擊者的思維，看看是否能找到任何不應被公開的資訊。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用 Google Search Console:&lt;/strong&gt; 網站管理者可以利用 Google Search Console 的「移除網址」功能，要求 Google 從搜尋結果中移除已經被索引的敏感頁面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;強化存取控制:&lt;/strong&gt; 對於後台登入頁面或敏感的管理功能，應採用更強的存取控制措施，例如限制特定 IP 位址的存取、啟用雙因素認證 (2FA) 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;結論&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Google Hacking 是一把雙面刃。它既是資安人員保護網路世界的利器，也可能成為惡意人士發動攻擊的敲門磚。了解並掌握其原理與技巧，不僅能幫助我們更有效率地獲取資訊，更能讓我們意識到網路世界中潛在的資安風險。對於網站的擁有者與管理者而言，建立正確的資安觀念，並採取積極的防禦措施，才是杜絕 Google Hacking 所帶來威脅的根本之道。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
