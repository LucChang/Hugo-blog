[{"content":"為什麼我要參加AIS3 Junior 資安營對\r在高一期間開始接觸到資安的領域，在營隊之前有些觸過pwn和crypto，但是我覺得在資安相關的領域我真的沒有見聞，於是就決定參加AIS3 Junior。在參加AIS3 Junior前兩個月就需要先頭自己的履歷給官方，因為這個營隊是教育部全額補助的活動，所以在報名的流程需要篩選合適的人選，幸運地我入選AIS3 Junior的名單😊。\nDAY1\r由於AIS3 Junior 舉辦地點在嘉義的中正大學，所以我千里迢迢的從新北市奔波到嘉義，幸好集合時間在下午五點，這樣我就不需要這麼的急忙。下午到了嘉義車站後，我姑丈開車載我到中正大學(他媽的為什麼不再火車站旁邊)，因為下雨的關係所以我遲到了15分鐘。到了集合地點我突然看見了很熟悉麼面孔，原來是前一個營隊的室友黃士育，不知道甚麼機緣我們又再次變成了室友，而且組別也相同。第一天其實沒有什麼行程，剛集合完就去住宿的地方了，晚上吃完飯回到宿舍就開始Setup隔天要使用的的kali虛擬機，大概就是這樣了。\nDay2\r今天課程正式開始，早上我跟室友們從宿舍走道了講廳(超遠)，到了講廳終於遇到了小組的成員包含我們的隊輔(資安大老)，接下來就進入到了第一堂課了，主要就是在講資安倫理、資安攻擊方式以及趨勢等，到了第二堂課開始進入資安概論，學到了linux系統的基本指令以及架構，也有很多lab 的題目運用linux的指令取找flag。我是第一次接觸過linux的指令，整堂課整個矇掉，看到其他學員都行雲流水的打起鍵盤，但我只表現出不失所措的樣子，幸好助教以及組員們都很助人，我才慢慢地能夠理解linux指令的用法以及lab上的題目要做什麼。\n下午除了破斌遊戲又有一個資安概論同樣的也是在講解linux指令以及使用方面的教學，同時也繼續上我們完成lab上的題目。晚上回到宿舍就是lab 作業時間，所以大家都忙著解題，慢慢熟練Linux 的指令後，發現題目也沒有想像中的難，其實就是考驗對於Linux 指令的熟練度。\nDay3\r來到了第三天，今天的上課主題與昨天不同，要上的是Web Security(網路安全)，主題更難了一些，需要了解一些網頁的概念以及協議等，但這些東西都是之前就有接觸過的東西。Web Security 這次教到的攻擊手法有XSS, LFI, Webshell, CMDi, SQLi, SSRF以及SSTI等，這些東西我從來沒有聽過，雖然在上課時對於這些攻擊方式的原理一知半解，也不太曉得這些攻擊守法的用途以及公用，但是透過lab 著手製造這些攻擊其實也挺有趣的，也讓我對於這些攻擊至少有一些幹念，透過不同的漏洞取得RCE(遠端程式碼執行)挺有成就感的。 上午的課堂以及下午的第一堂課都在講解Web Security 相關的領域，到了下午第二堂就進入了這次的魔王主題「AI 應用安全實務」，這個主題是我認為非常有挑戰性，雖然AI釋普現現代人都用過的東西，但是運用在資安方面就是一個非常深奧的學問。在這個主題中我們先認識什麼事Transformer 模型，以及 Transformer 模型的原理，同樣的我們也認識到Prompt engineering，如何透過說話的藝術讓模型更清楚知道使用者要的東西，甚至繞過模型內部的規範，存取模型內部被禁止存取的東西。所以這幾天的lab我們一直在跟AI 助理聊天，要怎麼透過Prompt Injection的方式繞過模型內部審核機制來取得FLag，這個主題讓我心力憔悴，像是在寫作文一樣，構造不同的文具或是不同的技巧(改變attention 區間等)，讓模型繞過自己的審核機制真的超級困難，我的室友們很快就解出來了，無論我怎麼構造Prompt 最後都還是無法存取到flag，甚至花上了好幾小時的時間還是無法解開，可能我對於整個prompt 的 format 或是 Cot Prompting 的技巧還沒有這麼熟練。\nDay 4\rDay 5\r","date":"2025-04-25T09:42:57+08:00","image":"https://public-imgbed.pages.dev/file/1744726758922_Screenshot 2025-04-15 221605.png","permalink":"http://localhost:1313/post/summer-camp/","title":"AIS3 Junior 夏令營"},{"content":"","date":"2024-05-28T15:04:05Z","permalink":"http://localhost:1313/post/picocft-writeup/writeup/","title":"picoCTF Write up"},{"content":"深入理解 Cross-Site Scripting (XSS) 攻擊與防禦\rCross-Site Scripting (XSS)，即跨網站指令碼，是前端開發中常見且危險的資安漏洞。它的核心概念是讓攻擊者能夠在其他使用者（客戶端）的瀏覽器上執行惡意的 JavaScript 或其他指令碼，進而竊取敏感資訊、劫持使用者會話，甚至操控網頁行為。\nXSS 攻擊之所以發生，通常是因為網站未能妥善處理來自使用者的輸入，導致輸入的內容被瀏覽器誤認為是可執行的程式碼，而非單純的資料。常見的輸入點包括表單欄位（如搜尋框、留言區、使用者名稱）、URL 參數等。攻擊者可能會輸入類似 \u0026lt;script\u0026gt;alert('XSS')\u0026lt;/script\u0026gt; 或 \u0026lt;img src onerror=\u0026quot;alert('XSS')\u0026quot;\u0026gt; 這樣的代碼來測試或發動攻擊。\n根據惡意代碼 (payload) 的來源和其在伺服器上的存儲方式，XSS 可以分為幾種類型：\nXSS 的分類 (依據 Payload 的來源/儲存)\rReflected XSS (反射型 XSS)： 這種攻擊的 payload 不會被永久儲存到伺服器的資料庫中。攻擊者通常會將惡意代碼嵌入到 URL 參數中，然後誘騙受害者點擊這個包含 payload 的惡意連結。當受害者的瀏覽器向伺服器發出請求時，伺服器未經處理地將包含 payload 的內容反射回受害者的瀏覽器，導致 payload 在受害者的瀏覽器中執行。它的生命週期短暫，只在使用者訪問帶有惡意參數的 URL 時觸發一次。\nStored XSS (儲存型 XSS)： 這種攻擊是最具破壞力的類型之一。攻擊者成功地將惡意 payload 永久地儲存到目標網站的資料庫中（例如在論壇發帖、留言或修改使用者資料時注入）。當其他使用者瀏覽包含此 payload 的網頁時，伺服器會將儲存的惡意代碼連同正常內容一起發送給客戶端瀏覽器，導致 payload 在每個訪問該頁面的使用者瀏覽器中執行。危害範圍廣，且不需要額外的使用者互動（如點擊連結）。\nDOM-based XSS (基於 DOM 的 XSS)： 與前兩種主要依賴伺服器端處理不同，DOM-based XSS 漏洞存在於前端的 JavaScript 代碼中。惡意 payload 可能來自 URL 的片段識別符號（# 後面的部分）或其他客戶端可控的來源。前端 JavaScript 使用這些受控的資料不安全地操作文件物件模型 (DOM)，例如將資料寫入 innerHTML 或使用 eval() 函數，導致 payload 被瀏覽器作為程式碼執行。這種攻擊完全在客戶端進行，伺服器端可能完全不受影響。\n常見的 XSS Payload 目標\r攻擊者注入惡意 JavaScript 的目的多種多樣，常見的 payload 功能包括：\nWorkspace() 或 XMLHttpRequest: 將使用者的敏感資料（如 Cookies）發送到攻擊者控制的伺服器。 document.cookie: 竊取使用者的 Session Cookies，可能導致攻擊者劫持使用者會話。 html2canvas (或其他截圖庫): 對使用者正在瀏覽的頁面進行截圖，可能捕獲敏感視覺資訊。 Keylogger: 記錄使用者在頁面上的鍵盤輸入，竊取密碼、信用卡號等。 alert(): 最簡單的 PoC (Proof of Concept)，用於驗證 XSS 漏洞是否存在。 重新導向使用者到惡意網站、修改網頁內容進行釣魚等。 XSS 的進階概念\rXSS Worm (XSS 蠕蟲)： 一種更進階的 XSS 攻擊形式。惡意 JavaScript 不僅攻擊當前使用者，還會利用當前使用者的權限（如社交網路發帖權限）將 XSS payload 注入到他們能影響到的內容中，進而感染他們的聯繫人或粉絲。這導致 payload 像病毒一樣在使用者之間互相傳播，造成大規模感染。\nBlind XSS (盲打型 XSS)： 攻擊者注入 payload 後，不會立即看到效果，也不知道 payload 何時何地會被觸發。payload 被儲存在網站的某個位置，可能是在後台管理系統、日誌查看器、客戶服務面板等只有網站內部人員會訪問的地方。當內部人員訪問這些頁面時，payload 被執行，並通常會“打回來”通知攻擊者（例如向攻擊者發送一個包含執行環境資訊的請求）。攻擊者是「盲打」，等待 payload 在一個未知的時機和地點被「看到」。\nSelf-XSS (自體 XSS)： 這是一種需要使用者自己手動執行惡意代碼的 XSS。通常攻擊者會欺騙使用者在瀏覽器的開發者控制台中貼上並執行一段 JavaScript 代碼。這種攻擊通常不能強加給使用者，主要依賴於社會工程學來誘導使用者自己攻擊自己，對其他使用者不構成直接威脅，但仍可能導致帳戶被盜用。\nXSS 的防禦策略\r防禦 XSS 是一個需要多層次方法的課題：\n輸入驗證 (Input Validation) 與輸出編碼 (Output Encoding)： 這是最基本也是最重要的防禦。\n輸入驗證： 檢查使用者輸入的內容是否符合預期的格式和類型。例如，如果只允許數字，則拒絕包含其他字元的輸入。這有助於過濾掉明顯不符合規範的輸入。 輸出編碼/轉義 (Encoding/Escaping)： 當需要在 HTML 頁面中顯示使用者輸入的內容時，必須對所有輸出進行嚴格的編碼或轉義。將具有特殊意義的 HTML 字元（如 \u0026lt;, \u0026gt;, \u0026quot;, ', \u0026amp;, / 等）轉換為它們的 HTML 實體（如 \u0026amp;lt;, \u0026amp;gt; 等）。這樣瀏覽器就會把這些內容當作普通文本顯示，而不會解析為 HTML 標籤或 JavaScript 代碼。這是防禦 Reflected 和 Stored XSS 的首要措施。 HTML 過濾 (HTML Sanitization)： 當網站允許使用者輸入包含 HTML 標籤的富文本內容時（例如評論區的粗體、斜體格式），不能簡單地全部編碼。這時需要使用 HTML 過濾器。過濾器的作用是移除或修改輸入 HTML 中潛在的危險元素（如 \u0026lt;script\u0026gt;, \u0026lt;iframe\u0026gt;, \u0026lt;svg\u0026gt; 標籤）和危險屬性（如 onerror, onload, href 中的 javascript: 偽協議等），只保留安全的 HTML 標籤和屬性。這是一個複雜的任務，很難手動完美處理所有情況。\nDOMPurify： 是一個被廣泛使用的、強健的 HTML 過濾庫，它在瀏覽器端運行，能有效淨化 HTML 片段。但即使是 DOMPurify，不正確的使用方式也可能引入漏洞，需要仔細閱讀其文檔。 內容安全政策 (Content Security Policy, CSP)： CSP 是一種由瀏覽器強制執行的安全層。通過在 HTTP 頭部或 HTML 的 \u0026lt;meta\u0026gt; 標籤中定義一系列策略，網站可以告訴瀏覽器允許從哪些來源載入哪些類型的資源（如腳本、樣式表、圖片等）。這本質上是一個白名單機制。 CSP 並不能完全阻止 XSS 注入，但它可以極大地限制被注入腳本的執行能力，例如禁止內聯腳本 (\u0026lt;script\u0026gt;... \u0026lt;/script\u0026gt;)、禁止從未知來源加載外部腳本、限制表單提交的目標等。它是作為縱深防禦的重要一環，即使其他防禦措施失效，CSP 也能降低攻擊的影響。 常見的 CSP 指令 (Directive) 包括：\ndefault-src: 所有資源的預設策略。 script-src: 規定腳本的允許來源。 img-src: 規定圖片的允許來源。 connect-src: 規定 XMLHttpRequest, WebSockets 等連線的允許目標。 style-src: 規定樣式表的允許來源。 Maps-to: 限制頁面導航和表單提交的目標 URL。 CSP 的繞過 (CSP Bypassing)\r儘管 CSP 提供了強大的保護，但配置不當的策略仍然可能被繞過。例如，如果 CSP 的 script-src 策略允許從一個包含 JSONP 端點的域名加載腳本，攻擊者可能可以利用 JSONP 的回調機制來執行任意 JavaScript，即使網站本身沒有直接的 XSS 漏洞。這提醒我們 CSP 配置需要非常謹慎，且不能僅依賴 CSP。\nJavaScript 偽協議 (javascript: pseudo-protocol)\rjavascript: 偽協議允許在 URL 或某些 HTML 屬性（如 \u0026lt;a href=\u0026quot;...\u0026quot;\u0026gt;, \u0026lt;img src=\u0026quot;...\u0026quot;\u0026gt;）中使用 JavaScript 代碼。例如 \u0026lt;a href=\u0026quot;javascript:alert(1)\u0026quot;\u0026gt;點我\u0026lt;/a\u0026gt;。如果不對使用者輸入的 URL 或屬性值進行驗證和過濾，攻擊者可以注入這樣的連結來觸發 JavaScript 執行，這也是 XSS 的一種表現形式。\n總結\rCross-Site Scripting (XSS) 是一個嚴重的 Web 安全問題，它可以讓攻擊者在其他使用者的瀏覽器上執行惡意程式碼。理解 Reflected, Stored, 和 DOM-based XSS 的區別對於識別和防禦漏洞至關重要。防禦 XSS 需要一個多層次的方法：優先對所有使用者輸出進行嚴格的編碼/轉義；在允許富文本的場景下使用安全的 HTML 過濾庫 (如 DOMPurify)；並配置強大的 Content Security Policy (CSP) 作為最後一道防線。始終記住，對使用者輸入保持警惕，並在輸出時假設它是不可信的，是防止 XSS 的關鍵原則。\n","date":"2024-05-28T15:04:05Z","permalink":"http://localhost:1313/post/about-xss/about_xss/","title":"關於XSS的ㄋㄚˋ些事"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings\rThe following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1\rH2\rH3\rH4\rH5\rH6\rParagraph\rXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes\rThe blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution\rTiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution\rDon\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables\rTables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables\rItalics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks\rCode block with backticks\r\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces\r\u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode\r\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block\r[dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types\rOrdered List\rFirst item Second item Third item Unordered List\rList item Another item And another item Nested list\rFruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark\rH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image\rThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"http://localhost:1313/post/markdown-syntax/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"http://localhost:1313/post/markdown-syntax/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode\rTwitter Simple Shortcode\r“In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Design Reviewed | Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode\rbilibilibi Shortcode\rGist Shortcode\rGitlab Snippets Shortcode\rQuote Shortcode\rStack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2019-03-10T00:00:00Z","permalink":"http://localhost:1313/post/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt\rThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat\rVicta caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"http://localhost:1313/post/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"http://localhost:1313/post/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples\rInline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"http://localhost:1313/post/math-typesetting/","title":"Math Typesetting"}]